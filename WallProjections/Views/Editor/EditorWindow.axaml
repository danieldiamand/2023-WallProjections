<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="using:WallProjections.ViewModels.Interfaces.Editor"
        xmlns:views="using:WallProjections.Views"
        xmlns:editor="using:WallProjections.Views.Editor"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="WallProjections.Views.Editor.EditorWindow"
        x:DataType="vm:IEditorViewModel"
        Icon="/Assets/app-icon.ico"
        Title="EditorWindow"
        WindowState="Maximized"
        IsEnabled="{Binding !AreActionsDisabled}"
        IsInPositionEditMode="{Binding PositionEditor.IsInEditMode}"
        KeyDown="Editor_OnKeyDown"
        Closing="Editor_OnClosing">

    <Window.Styles>
        <Style Selector="FlyoutPresenter.attached-bottom">
            <Setter Property="Margin" Value="0 5 0 0" />
        </Style>
    </Window.Styles>

    <Grid RowDefinitions="Auto, *">

        <Border Grid.Column="0" Grid.Row="0"
                BorderBrush="LightGray"
                BorderThickness="0 0 0 2"
                Padding="8">

            <Grid ColumnDefinitions="Auto, *, Auto">

                <StackPanel Grid.Column="0" Grid.Row="0"
                            Orientation="Horizontal"
                            Spacing="15">

                    <Button Click="ConfigImport_OnClick">
                        Import Config
                    </Button>

                    <Button IsEnabled="{Binding CanExport}"
                            Click="ConfigExport_OnClick">
                        Export Config
                    </Button>

                    <Button Click="Calibrate_OnClick">
                        Calibrate camera
                    </Button>

                </StackPanel>

                <StackPanel Grid.Column="2" Grid.Row="0"
                            Orientation="Horizontal"
                            Spacing="15">

                    <Button IsEnabled="{Binding !IsSaved}"
                            Click="Save_OnClick">
                        Save
                    </Button>

                    <Button Click="Close_OnClick">
                        Return to Viewer
                    </Button>

                </StackPanel>

            </Grid>

        </Border>

        <Grid Grid.Column="0" Grid.Row="1"
              ColumnDefinitions="*, 15, 3*, 15, 2*" RowDefinitions="*, 15, *"
              Margin="15">

            <editor:HotspotList Grid.Column="0" Grid.Row="0" Grid.RowSpan="3"
                                DataContext="{Binding}"
                                AddHotspot="HotspotList_OnAddHotspot"
                                DeleteHotspot="HotspotList_OnDeleteHotspot" />

            <editor:DescriptionEditor Grid.Column="2" Grid.Row="0" Grid.RowSpan="3"
                                      DataContext="{Binding DescriptionEditor}">
                <editor:DescriptionEditor.MenuItems>
                    <views:IconButton Grid.Column="2" Grid.Row="0"
                                      Classes=""
                                      IconData="{StaticResource document_import_regular}"
                                      Click="DescriptionEditor_OnImportDescription">
                        <ToolTip.Tip>
                            <TextBlock TextAlignment="Center">
                                Import title and description<LineBreak />
                                from a text file
                            </TextBlock>
                        </ToolTip.Tip>
                    </views:IconButton>

                    <views:IconToggleButton Name="PositionEditorToggle"
                                            Classes=""
                                            ToolTip.Tip="Edit position"
                                            IsChecked="{Binding $parent[editor:EditorWindow].IsInPositionEditMode}"
                                            IconData="{StaticResource my_location_regular}"
                                            Click="EditPosition_OnClick">
                        <FlyoutBase.AttachedFlyout>
                            <Flyout FlyoutPresenterClasses="attached-bottom"
                                    ShowMode="Transient"
                                    Placement="BottomEdgeAlignedRight"
                                    OverlayInputPassThroughElement="{Binding $parent[Window]}">

                                <TextBlock MaxWidth="170"
                                           TextAlignment="Center"
                                           TextWrapping="Wrap"
                                           Text="Use your mouse to move the hotspot around on the second screen" />

                            </Flyout>
                        </FlyoutBase.AttachedFlyout>
                    </views:IconToggleButton>
                </editor:DescriptionEditor.MenuItems>
            </editor:DescriptionEditor>

            <editor:MediaEditor Grid.Column="4" Grid.Row="0"
                                DataContext="{Binding ImageEditor}"
                                AddMedia="ImageEditor_OnAddMedia"
                                RemoveMedia="ImagesEditor_OnRemoveMedia"
                                OpenExplorerFailed="MediaEditor_OnOpenExplorerFailed" />

            <editor:MediaEditor Grid.Column="4" Grid.Row="2"
                                DataContext="{Binding VideoEditor}"
                                AddMedia="VideoEditor_OnAddMedia"
                                RemoveMedia="VideoEditor_OnRemoveMedia"
                                OpenExplorerFailed="MediaEditor_OnOpenExplorerFailed" />

            <views:Toast Name="LoadingToast"
                         Grid.Column="0" Grid.Row="0"
                         Grid.ColumnSpan="5" Grid.RowSpan="3"
                         IsLoading="True" />

            <views:Toast Name="Toast"
                         Grid.Column="0" Grid.Row="0"
                         Grid.ColumnSpan="5" Grid.RowSpan="3" />

        </Grid>

    </Grid>

</Window>
