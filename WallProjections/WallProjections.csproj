<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <TargetFramework>net6.0</TargetFramework>
        <Nullable>enable</Nullable>
        <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
        <ApplicationManifest>app.manifest</ApplicationManifest>
        <AvaloniaUseCompiledBindingsByDefault>true</AvaloniaUseCompiledBindingsByDefault>
        <Configurations>Debug;Release;DebugSkipPython</Configurations>
        <Platforms>AnyCPU</Platforms>
        <ApplicationIcon>Assets\app-icon.ico</ApplicationIcon>
        <AppDataDir>$([System.Environment]::GetFolderPath(SpecialFolder.ApplicationData))</AppDataDir>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'DebugSkipPython' ">
        <DebugSymbols Condition=" '$(DebugSymbols)' == '' ">true</DebugSymbols>
        <Optimize Condition=" '$(Optimize)' == '' ">false</Optimize>
    </PropertyGroup>

    <ItemGroup>
        <AvaloniaResource Include="Assets\**"/>
        <Content Include="Scripts\**\*" Exclude="Scripts\Internal\**;Scripts\Platform\**;Scripts\video_capture_factory.py;Scripts\Test\**">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <ItemGroup>
        <None Include="$(Pkgpython)\tools\**\*" Link="python\%(RecursiveDir)%(Filename)%(Extension)" CopyToOutputDirectory="PreserveNewest" Condition="$([MSBuild]::IsOsPlatform('Windows'))"/>
    </ItemGroup>

    <ItemGroup Condition="'$(Configuration)' == 'Release' OR '$(RuntimeIdentifier)' != ''">
        <Content Include="Scripts\Platform\Windows\*.py" Condition="'$(RuntimeIdentifier)' == 'win-x64'">
            <Link>Scripts\%(Filename)%(Extension)</Link>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="Scripts\Platform\Linux\*.py" Condition="'$(RuntimeIdentifier)' == 'linux-x64' OR '$(RuntimeIdentifier)' == 'linux-arm64'">
            <Link>Scripts\%(Filename)%(Extension)</Link>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="Scripts\Platform\Other\*.py" Condition="'$(RuntimeIdentifier)' != 'win-x64' AND '$(RuntimeIdentifier)' != 'linux-x64' AND '$(RuntimeIdentifier)' != 'linux-arm64'">
            <Link>Scripts\%(Filename)%(Extension)</Link>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <!-- For local development -->
    <ItemGroup Condition="'$(Configuration)' != 'Release'">
        <Content Include="Scripts\Platform\Windows\*.py" Condition="$([MSBuild]::IsOsPlatform('Windows'))">
            <Link>Scripts\%(Filename)%(Extension)</Link>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="Scripts\Platform\Linux\*.py" Condition="$([MSBuild]::IsOsPlatform('Linux'))">
            <Link>Scripts\%(Filename)%(Extension)</Link>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="Scripts\Platform\Other\*.py" Condition="!$([MSBuild]::IsOsPlatform('Windows')) AND !$([MSBuild]::IsOsPlatform('Linux'))">
            <Link>Scripts\%(Filename)%(Extension)</Link>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <Target Name="SetUpPython" BeforeTargets="GenerateArUcos" Condition="$([MSBuild]::IsOsPlatform('Windows'))">
        <Exec Command="$(Pkgpython)\tools\python -m pip install -r Scripts/requirements.txt"/>
    </Target>

    <Target Name="GenerateArUcos" BeforeTargets="PrepareForBuild">
        <Exec Command="$(Pkgpython)\tools\python Scripts\Internal\aruco_generator.py" Condition="$([MSBuild]::IsOsPlatform('Windows'))"/>
        <Exec Command="python3 Scripts/Internal/aruco_generator.py" Condition="!Exists('$(AppDataDir)/WallProjections/VirtualEnv') AND !$([MSBuild]::IsOsPlatform('Windows'))"/>
        <Exec Command="$(AppDataDir)/WallProjections/VirtualEnv/bin/python Scripts/Internal/aruco_generator.py" Condition="Exists('$(AppDataDir)/WallProjections/VirtualEnv') AND !$([MSBuild]::IsOsPlatform('Windows'))"/>
        <ItemGroup>
            <AvaloniaResource Include="Assets\**"/>
        </ItemGroup>
    </Target>

    <ItemGroup>
        <PackageReference Include="Avalonia" Version="11.0.5"/>
        <PackageReference Include="Avalonia.Desktop" Version="11.0.5"/>
        <PackageReference Include="Avalonia.Themes.Fluent" Version="11.0.5"/>
        <PackageReference Include="Avalonia.Fonts.Inter" Version="11.0.5"/>
        <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
        <PackageReference Condition="'$(Configuration)' != 'Release'" Include="Avalonia.Diagnostics" Version="11.0.5"/>
        <PackageReference Include="Avalonia.ReactiveUI" Version="11.0.5"/>
        <PackageReference Include="FluentAvalonia.ProgressRing" Version="1.69.2"/>
        <PackageReference Include="LibVLCSharp.Avalonia" Version="3.8.2"/>
        <PackageReference Condition="$([MSBuild]::IsOsPlatform('Windows'))" Include="VideoLAN.LibVLC.Windows" Version="3.0.20"/>
        <PackageReference Condition="$([MSBuild]::IsOsPlatform('OSX'))" Include="VideoLAN.LibVLC.Mac" Version="3.1.3.1"/>
        <PackageReference Include="pythonnet" Version="3.0.3"/>
        <PackageReference Include="Microsoft.Extensions.Logging" Version="8.0.0"/>
        <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="8.0.0"/>
        <PackageReference Condition="$([MSBuild]::IsOsPlatform('Windows'))" Include="python" Version="3.11.9"/>
    </ItemGroup>
</Project>
